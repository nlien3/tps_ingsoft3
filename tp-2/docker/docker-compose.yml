services:
  # --- DB QA ---
  db-qa:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: notes_app_qa
      MYSQL_USER: app
      MYSQL_PASSWORD: app123
    ports:
      - "3307:3306" # opcional (para IDE); si no lo necesitás, borrá esta línea
    volumes:
      - mysql_data_qa:/var/lib/mysql
      - ./sql/qa:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "127.0.0.1",
          "-u",
          "app",
          "-papp123",
        ]
      interval: 5s
      timeout: 3s
      retries: 15

  # --- DB PROD ---
  db-prod:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: notes_app_prod
      MYSQL_USER: app
      MYSQL_PASSWORD: app123
    ports:
      - "3308:3306" # opcional (para IDE)
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./sql/prod:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "127.0.0.1",
          "-u",
          "app",
          "-papp123",
        ]
      interval: 5s
      timeout: 3s
      retries: 15

  # --- APP QA ---
  app-qa:
    # build: .
    image: 0nico0/notes-app:v1.1
    pull_policy: always
    depends_on:
      db-qa:
        condition: service_healthy
    environment:
      NODE_ENV: production
      MYSQL_HOST: db-qa
      MYSQL_PORT: 3306
      MYSQL_USER: app
      MYSQL_PASSWORD: app123
      MYSQL_DATABASE: notes_app_qa
      LOG_LEVEL: debug
    ports:
      - "3001:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 3s
      retries: 10

  # --- APP PROD ---
  app-prod:
    image: 0nico0/notes-app:v1.1
    pull_policy: always
    depends_on:
      db-prod:
        condition: service_healthy
    environment:
      NODE_ENV: production
      MYSQL_HOST: db-prod
      MYSQL_PORT: 3306
      MYSQL_USER: app
      MYSQL_PASSWORD: app123
      MYSQL_DATABASE: notes_app_prod
      LOG_LEVEL: warn
    ports:
      - "3002:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 3s
      retries: 10

volumes:
  mysql_data_qa:
  mysql_data_prod:
